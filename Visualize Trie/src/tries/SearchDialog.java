package tries;



import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Paint;
import java.awt.Shape;
import java.awt.event.ActionEvent;
import java.awt.geom.Ellipse2D;
import java.util.Vector;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;

import org.apache.commons.collections15.Transformer;
import org.apache.commons.collections15.functors.ChainedTransformer;

import edu.uci.ics.jung.algorithms.layout.FRLayout;
import edu.uci.ics.jung.algorithms.layout.KKLayout;
import edu.uci.ics.jung.algorithms.layout.Layout;
import edu.uci.ics.jung.algorithms.layout.TreeLayout;
import edu.uci.ics.jung.graph.DelegateTree;
import edu.uci.ics.jung.graph.Graph;
import edu.uci.ics.jung.visualization.GraphZoomScrollPane;
import edu.uci.ics.jung.visualization.VisualizationViewer;
import edu.uci.ics.jung.visualization.decorators.ToStringLabeller;
import edu.uci.ics.jung.visualization.renderers.Renderer;
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Raghu
 */
public class SearchDialog extends javax.swing.JDialog {

	
	private VisualizationViewer vv;
	private GraphZoomScrollPane pane;
	private DelegateTree graph;	
	private JTextArea textArea;
	private boolean graphRequired;
	private java.awt.Frame parent;
	    /**
     * Creates new form NewJDialog
	     * @param graphRequired 
     */
    public SearchDialog(java.awt.Frame parent, boolean modal,JTextArea textArea, boolean b) {
        super(parent, modal);
        graphRequired=b;
        initComponents();
        this.textArea=textArea;
        this.parent=parent;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Search");
        setPreferredSize(new java.awt.Dimension(550, 506));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Input Search String"));

        jTextField1.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jTextField1.setText("Enter Search String Here!");

        jCheckBox1.setText("Match Whole Word");

        jCheckBox2.setText("Animate Searching");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jCheckBox2)
                .addGap(120, 120, 120))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2))
                .addContainerGap())
        );

        jButton1.setText("Find!");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }			
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Trie Graph"));
        jPanel1.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 344, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        if(!graphRequired) jCheckBox2.setEnabled(false);
        System.out.println(graphRequired);
        pack();
    }// </editor-fold>                        


    public void InitializeGraph(DelegateTree getGraph)
    {    	
    	graph=getGraph;
    	Layout<MyNode, MyLink> layout ;
    	layout = new TreeLayout<MyNode, MyLink>(graph);
    	
    	 vv =  new VisualizationViewer<MyNode, MyLink>(layout);

        Transformer<MyNode,Paint> vertexPaint = new Transformer<MyNode,Paint>() {
            public Paint transform(MyNode node) {
            	if(node.isRoot) return Color.YELLOW;
                return Color.GREEN;
            }
        };  
        Transformer<MyNode,Shape> vertexSize = new Transformer<MyNode,Shape>(){
            public Shape transform(MyNode i){
            	if(i.isRoot) return new Ellipse2D.Double(-15,-15,40,40);
                Ellipse2D circle = new Ellipse2D.Double(-15, -15, 25, 25);
                // in this case, the vertex is twice as large
          //      if(i == 2) return AffineTransform.getScaleInstance(2, 2).createTransformedShape(circle);
                 return circle;
            }
        };
        Transformer<MyNode,Font> vertexFont = new Transformer<MyNode,Font>() {
            public Font transform(MyNode i) {
                return new Font("Comic Sans MS",Font.PLAIN,15);
            }
        };
        Transformer<MyLink,Paint> edgePaint = new Transformer<MyLink,Paint>() {
            public Paint transform(MyLink link) {           	
            	
            	
            	return Color.DARK_GRAY; 
            		
           }
        }; 
        Transformer labelTransformer = new ChainedTransformer<String,String>(new Transformer[]{
                new ToStringLabeller<String>(),
                new Transformer<String,String>() {
                public String transform(String input) {
                    return "<html><font color=\"blue\">"+input.split(" ")[0];
                }}});
        
        
        vv.getRenderContext().setEdgeDrawPaintTransformer(edgePaint);
        vv.getRenderContext().setVertexFillPaintTransformer(vertexPaint);
        vv.getRenderContext().setVertexLabelTransformer(new ToStringLabeller());
        vv.getRenderContext().setEdgeLabelTransformer(labelTransformer);
        vv.getRenderer().getVertexLabelRenderer().setPosition(Renderer.VertexLabel.Position.CNTR);        
        vv.getRenderContext().setVertexFontTransformer(vertexFont);
        vv.getRenderContext().setVertexShapeTransformer(vertexSize);
        
      
        pane =new GraphZoomScrollPane(vv);
        vv.setBackground(Color.cyan);              
        
        jPanel2.removeAll();
        jPanel2.setLayout(null);
        
        pane.setSize(jPanel2.getSize());
        jPanel2.add(pane);
        jPanel2.revalidate();
        jPanel2.repaint();     
        
    }
    
    private void jButton1ActionPerformed(ActionEvent evt) {
		// TODO Auto-generated method stub
    	jTextField1.setEnabled(false);
    	//textArea.getHighlighter().removeAllHighlights();
    	if(jCheckBox2.isSelected()){
    		SearchAnimation sa=new SearchAnimation((MyNode)graph.getRoot(),vv,jTextField1.getText(),this);
    	}
    	SearchAndDisplay(jCheckBox1.isSelected());
    	
		jTextField1.setEnabled(true);
	}

    private void SearchAndDisplay(boolean selected) {
		// TODO Auto-generated method stub
		MyNode ptr=Trie.GetRoot();
		boolean flag=false;
		
		textArea.getHighlighter().removeAllHighlights();
		
		for(int i=0;i<jTextField1.getText().length();++i){
			if(ptr.keys[jTextField1.getText().charAt(i)]==null)
			{
				JOptionPane.showMessageDialog(this, "Null Pointer ! Search Failed");
				flag=true;
				((UserInterface)parent).ProgressInfo("\n\nSEARCH FAILED!!");
				break;
			}
			else
				ptr=ptr.keys[jTextField1.getText().charAt(i)];
		}
		
		if(flag) return;
		
		System.out.println(ptr);
		flag=true;
		Vector<Integer> finds=new Vector<Integer>();
		
		for(int i=0;i<ptr.positionEnds.size();++i)
		{
			if((!selected) || (selected && ptr.positionEnds.elementAt(i)))
			{
				flag=false;
			 	 DefaultHighlighter.DefaultHighlightPainter highlightPainter = 
		    		        new DefaultHighlighter.DefaultHighlightPainter(Color.YELLOW);

			 	try {
					textArea.getHighlighter().addHighlight(ptr.positionLocs.elementAt(i)-jTextField1.getText().length(), ptr.positionLocs.elementAt(i), highlightPainter);
					finds.addElement(ptr.positionLocs.elementAt(i)-jTextField1.getText().length());
				} catch (BadLocationException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}    

			}			
		}
		if(flag)
		{
			((UserInterface)parent).ProgressInfo("\n\nPREFIX MATCH ! SEARCH FAILED!!");
		}
		else
		{
			((UserInterface)parent).ProgressInfo("\n\nSEARCH SUCCESS!! \n No. of occurences: "+finds.size()+"\nFound at : ");
			textArea.setCaretPosition(finds.elementAt(0));
			for(Integer i: finds)
			{
				((UserInterface)parent).ProgressInfo(i+", ");
			}
		}

	}

	/**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JCheckBox jCheckBox2;
    // End of variables declaration                   
}
